 State GetStateForBlock(block) {
        if (block.height == 0) {
            return DEFINED;
        }
        if ((block.height % 2016) != 0) {
            return GetStateForBlock(block.parent);
        }
        switch (GetStateForBlock(GetAncestorAtHeight(block, block.height - 2016))) { case DEFINED:
            if (GetMedianTimePast(block.parent) >= timeout) {
                return FAILED;
            }
            if (GetMedianTimePast(block.parent) >= starttime) {
                return STARTED;
            }
            return DEFINED;
             case STARTED: 
            if (GetMedianTimePast(block.parent) >= timeout) {
                return FAILED;
            }
            int count = 0;
            walk = block;
            for (i = 0; i < 2016; i++) {
                walk = walk.parent;
                if (walk.nVersion & 0xE0000000 == 0x20000000 && (walk.nVersion >> bit) & 1 == 1) {
                    count++;
                }
            }
            if (count >= threshold) {
                return LOCKED_IN;
            }
            return STARTED;
            case LOCKED_IN:
            return ACTIVE;
            case ACTIVE:
            return ACTIVE;
            case FAILED:
            return FAILED;
        }
    }
